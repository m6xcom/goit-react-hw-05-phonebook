{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactsList/ContactsList.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactsList/ContactsList.js","components/App/App.js","index.js"],"names":["module","exports","ADDCONTACT","createAction","DELETECONTACT","FILTERCHANGE","items","createReducer","type","state","payload","every","el","name","alert","filter","id","contacts","combineReducers","contactsConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","connect","dispatch","addContact","contact","nameInput","shortid","generate","numberInput","className","style","form","onSubmit","e","preventDefault","target","children","value","number","reset","htmlFor","addContactBtn","filterChange","text","filterInput","title","onChange","toLowerCase","deleteContact","contactId","includes","map","contactsListItem","onClick","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.f35d8c0e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3KzR8\",\"addContactBtn\":\"ContactForm_addContactBtn__3lCjd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Filter_title__1TZGT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsListItem\":\"ContactsList_contactsListItem__3Ex68\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const ADDCONTACT = createAction(\"contacts/addContact\");\r\n\r\nexport const DELETECONTACT = createAction(\"contacts/deleteContact\");\r\n\r\nexport const FILTERCHANGE = createAction(\"contacts/filterChange\");\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport { ADDCONTACT, FILTERCHANGE, DELETECONTACT } from \"./contacts-actions\";\r\n\r\nconst items = createReducer([], {\r\n  [ADDCONTACT.type]: (state, { payload }) => {\r\n    if (state.every((el) => el.name !== payload.name)) {\r\n      return [...state, payload];\r\n    } else {\r\n      alert(`${payload.name} is already in contacts.`);\r\n    }\r\n  },\r\n  [DELETECONTACT.type]: (state, { payload }) => {\r\n    return state.filter((el) => el.id !== payload);\r\n  },\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [FILTERCHANGE.type]: (state, { payload }) => payload,\r\n});\r\n\r\nexport const contacts = combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport { contacts } from \"./contacts/contacts-reducer\";\r\n\r\nconst contactsConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: { contacts: persistReducer(contactsConfig, contacts) },\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport shortid from \"shortid\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ADDCONTACT } from \"../../redux/contacts/contacts-actions\";\r\nimport style from \"./ContactForm.module.css\";\r\n\r\nconst ContactForm = ({ addContact }) => {\r\n  const nameInput = shortid.generate();\r\n  const numberInput = shortid.generate();\r\n  return (\r\n    <form\r\n      className={style.form}\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        addContact({\r\n          id: shortid.generate(),\r\n          name: e.target.children.name.value,\r\n          number: e.target.children.number.value,\r\n        });\r\n        e.target.reset();\r\n      }}\r\n    >\r\n      <label htmlFor={nameInput}>Name</label>\r\n      <input id={nameInput} name=\"name\" type=\"text\"></input>\r\n      <label htmlFor={numberInput}>Number</label>\r\n      <input id={numberInput} name=\"number\" type=\"tel\"></input>\r\n      <button className={style.addContactBtn} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addContact: (contact) => dispatch(ADDCONTACT(contact)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n\r\nContactForm.propTypes = {\r\n  addContact: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport shortid from \"shortid\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FILTERCHANGE } from \"../../redux/contacts/contacts-actions\";\r\nimport style from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ filterChange }) => {\r\n  const filterInput = shortid.generate();\r\n  return (\r\n    <>\r\n      <label className={style.title} htmlFor={filterInput}>\r\n        Find contacts by name\r\n      </label>\r\n      <input\r\n        id={filterInput}\r\n        type=\"text\"\r\n        onChange={(e) => {\r\n          filterChange(e.target.value.toLowerCase());\r\n        }}\r\n        name=\"filter\"\r\n      ></input>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  filterChange: (text) => dispatch(FILTERCHANGE(text)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Filter);\r\n\r\nFilter.propTypes = {\r\n  filterChange: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { DELETECONTACT } from \"../../redux/contacts/contacts-actions\";\r\nimport style from \"./ContactsList.module.css\";\r\n\r\nconst ContactsList = ({ contacts, filter, deleteContact }) => {\r\n  return (\r\n    <ul>\r\n      {contacts\r\n        .filter((el) => el.name.toLowerCase().includes(filter))\r\n        .map((el) => {\r\n          return (\r\n            <li className={style.contactsListItem} key={el.id}>\r\n              <p>\r\n                {el.name} : {el.number}\r\n              </p>\r\n              <button onClick={() => deleteContact(el.id)}>Delete</button>\r\n            </li>\r\n          );\r\n        })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contacts.items,\r\n  filter: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  deleteContact: (contactId) => dispatch(DELETECONTACT(contactId)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    })\r\n  ),\r\n  filter: PropTypes.string,\r\n  deleteContact: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport ContactForm from \"../ContactForm/ContactForm\";\r\nimport Filter from \"../Filter/Filter\";\r\nimport ContactsList from \"../ContactsList/ContactsList\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <h2>Phonebook</h2>\r\n      <ContactForm />\r\n      <h2 className=\"contactsTitle\">Contacts</h2>\r\n      <Filter />\r\n      <ContactsList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport \"./index.css\";\r\nimport { store, persistor } from \"./redux/store\";\r\nimport App from \"./components/App/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}